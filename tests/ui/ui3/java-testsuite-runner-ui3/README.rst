MicroEJ UI Validation
=====================

Overview
--------

This project contains test cases aimed at validating the correct runtime execution 
of UI Pack on a MicroEJ Platform connected to a Board Support Package (BSP).
 
Tests are written as JUnit test cases, thus the main entry point is automatically generated by MicroEJ SDK.

Requirements
------------

-  MicroEJ SDK version ``5.1.0`` (included in MicroEJ SDK dist. ``19.05``).
-  MicroEJ Platform built from a MicroEJ UI Pack version ``13.0.0`` or higher.

Usage
-----

In MicroEJ SDK,

-  Select ``Run > Run Configurations...``. A launcher named
   ``java-testsuite-runner-ui3`` should be available under
   ``MicroEJ Application``.
   
-  In ``Execution`` tab, select the target MicroEJ Platform.

-  Click on ``Run`` button to compile the MicroEJ Application.

-  Link the BSP project with the MicroEJ Application (``microejapp.o``), 
   the MicroEJ Platform runtime (``microejruntime.a``) and the MicroEJ Platform header files (``*.h``).

-  The tests don't use assertions and prints only some reports. 
 
-  See below for an output example

::

    *****************************************************************************************************
    *                                  MicroEJ UI Validation - 1.0.0                                  *
    *****************************************************************************************************
    * Copyright 2021-2022 MicroEJ Corp. All rights reserved.                                            *
    * Use of this source code is governed by a BSD-style license that can be found with this software.  *
    *****************************************************************************************************
    
    -> Check LCD tearing: full screen (LLUI_DISPLAY_IMPL_flush validation)...
    Property 'com.microej.ui.tests.clock.seconds' is not set (default to '10' second(s))
    OK: testTearingFullScreen
    -> Check LCD tearing: black band (LLUI_DISPLAY_IMPL_flush validation)...
    Property 'com.microej.ui.tests.clock.seconds' is not set (default to '10' second(s))
    OK: testTearingVerticalBand
    Property 'com.microej.ui.tests.flush.tolerance.us' is not set (default to '200' us)
    LCD framerate time is 17528 us (57.051579 Hz)
    Retrieve the maximal drawing time (this will take several seconds)...
    The flush time is 7.708000 us
    To have an animation at 57.051579 Hz, the drawing time cannot be higher than 9.820000 ms.
    To have an animation at 28.525789 Hz, the drawing time cannot be higher than 27.348000 ms.
    To have an animation at 19.017193 Hz, the drawing time cannot be higher than 44.875999 ms.
    OK: testDrawingTime
    OK: testBackBufferRestore
    flush time (several iterations): 0
    wait flush time (several iterations): 295
    OK: testFlushTime
    PASSED: 5

Tearing
-------

The tearing effect (flickering) is visible on LCD when the flush job is not synchronized with
the LCD tearing signal (TE). 

Test "Full screen" toggles black and white screens. When flush job is synchronized and quite
fast, the LCD is gray. When it is not synchronized, the LCD content may be cut in two or 
several parts. 

Test "Black band" moves a black band on a white background. When flush job is not synchronized, 
the band seems cut in two or more parts.  

Drawing Time
------------

Test "Drawing time" determinates the maximum drawing time (in milliseconds) to have the better
framerate. The better framerate depends on LCD framerate and on post-flush copy step. When the
drawing time exceeds the maximum drawing time, the framerate is divided by two when the flush
job is synchronized on LCD tearing signal.

Dependencies
------------

*All dependencies are retrieved transitively by MicroEJ Module Manager*.

Source
------

N/A

Restrictions
------------

None.


Platform Test Suite
===================

This project is also a ready-to-use project for testing  `MicroEJ UI <https://docs.microej.com/en/latest/PlatformDeveloperGuide/ui.html>`_ implementations on a device.

Prerequisites
-------------

Consult `main Readme <../../../README.rst>`_.

Configuration
-------------

- In MicroEJ SDK, import the ``java-testsuite-runner-ui3`` project in your workspace.
- Create the local ``config.properties`` file. Copy the ``config.properties.tpl`` to ``config.properties``.
- Open the ``config.properties`` file.
- Fill the options marked as ``[required]``, particularly:

  - Target Platform: set ``target.platform.dir`` to the absolute path of the Platform being tested (the parent folder of the ``release.properties`` file and the platform sources, see `Setup a Platform for Tests <https://docs.microej.com/en/latest/ApplicationDeveloperGuide/testsuite.html#setup-a-platform-for-tests>`__),
  - `BSP Connection <https://docs.microej.com/en/latest/PlatformDeveloperGuide/platformCreation.html#bsp-connection>`_: check the Platform specific documentation to get the kind of configured BSP connection.
  - Trace Redirection (if the Platform requires output traces redirection): set options in sync with the Serial to Socket Transmitter options.

- Check `Application Options <https://docs.microej.com/en/latest/ApplicationDeveloperGuide/applicationOptions.html>`_ declared in ``validation/microej-testsuite-common.properties``. 
  By default, options are initialized with suitable values to successfully execute the whole test suite and should not be changed. 
  However in some particular cases, you can adjust test suite specific options or memory settings.

Execution
---------

Right-click on the ``java-testsuite-runner-ui3`` project and click on ``Build Module``.

Please refer to `Platform Qualification documentation <https://docs.microej.com/en/latest/PlatformDeveloperGuide/platformQualification.html>`_ to know more about test suites and how to get reports.

Troubleshooting
---------------

-  Consult `main Readme <../../../README.rst>`_.

..
    Copyright 2021-2022 MicroEJ Corp. All rights reserved.
    Use of this source code is governed by a BSD-style license that can be found with this software.


